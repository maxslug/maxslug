# maxslug .bashrc

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Work-related things here
if [ -f ~/.bashrc.local ]; then
  . ~/.bashrc.local
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# xfce4-terminal reports itself as xterm
if [ "$COLORTERM" == "xfce4-terminal" ]; then
  export TERM=xterm-256color
fi
# This handles recursive terminals / sshing to waves
if [ "$TERM" == "xterm-256color" ]; then
  # https://unix.stackexchange.com/questions/196098/copy-paste-in-xfce4-terminal-adds-0-and-1
  # https://askubuntu.com/questions/662222/why-bracketed-paste-mode-is-enabled-sporadically-in-my-terminal-screen
  # bracketed paste mode bug off
  printf "\e[?2004l"
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

if [ "$GIT_PROMPT" != "" ]; then
  source $GIT_PROMPT
  #export GIT_PS1_SHOWCOLORHINTS=true
  #export GIT_PS1_SHOWDIRTYSTATE=true; # this slows things down
  git_prompt=yes
else
  git_prompt=
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
xterm-256color|xterm-color)
    export PROMPT_DIRTRIM=3
    if [ "$git_prompt" == yes ]; then
      PS1='\[\e[01;32m\]\u@\h\[\e[00m\]:$(__git_ps1 " (%.10s)")${GEDI_PROMPT} \[\e[01;34m\]\w\[\e[00m\]\$ '
    else
      PS1='\[\e[01;32m\]\u@\h\[\e[00m\]:\[\e[01;34m\]\w\[\e[00m\]\$ '
    fi
    # Turn on color for less
    export LESS_TERMCAP_mb=$'\E[01;31m'
    export LESS_TERMCAP_md=$'\E[01;38;5;74m'
    export LESS_TERMCAP_me=$'\E[0m'
    export LESS_TERMCAP_se=$'\E[0m'
    #export LESS_TERMCAP_so=$'\E[38;5;246m'
    export LESS_TERMCAP_so=$'\E[30;43m'
    export LESS_TERMCAP_ue=$'\E[0m'
    export LESS_TERMCAP_us=$'\E[04;38;5;146m'
  ;;
screen)
    export PROMPT_DIRTRIM=3
    if [ "$git_prompt" == yes ]; then
      PS1='\[\ek\u@\h:$(__git_ps1 " (%.10s)") \w\a\e\\\e[01;32m\]\u@\h\[\e[00m\]:$(__git_ps1 " (%.10s)")${GEDI_PROMPT} \[\e[01;34m\]\w\[\e[00m\]\$ '
    else
      # Added the prompt three times :
      #   1. tmux tab title - uses a different escape seq \ek ... \e\\
      #   2. tmux session name (window tab) \e\0; ... \e\\
      #   3. bash (ANSI)
      # All non-printing characters need to be wrapped in \[ .... \] for bash counting
      PS1='\[\e]0;\u@\h: \w\e\\\ek\u@\h: \w\e\\\e[01;32m\]\u@\h\[\e[00m\]:\[\e[01;34m\]\w\[\e[00m\]\$ '
    fi
    # Turn on color for less
    export LESS_TERMCAP_mb=$'\E[01;31m'
    export LESS_TERMCAP_md=$'\E[01;38;5;74m'
    export LESS_TERMCAP_me=$'\E[0m'
    export LESS_TERMCAP_se=$'\E[0m'
    #export LESS_TERMCAP_so=$'\E[38;5;246m'
    export LESS_TERMCAP_so=$'\E[30;43m'
    export LESS_TERMCAP_ue=$'\E[0m'
    export LESS_TERMCAP_us=$'\E[04;38;5;146m'
    ;;
*)
    ;;
esac

# TODO : iterm + shell integration for tmux
# if [ -r /path/to/iterm/iterm2_shell_integration.bash ]; then
#   export ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX=YES
#   source /path/to/iterm/iterm2_shell_integration.bash
#   #PS1="\[\$(iterm2_prompt_mark)\]${PS1}"
# fi

# Bash completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Standard Commands
alias cdd='cd $(pwd -P)'
alias df='df -h'
alias du2='ncdu -x -r -2'
alias du='du -h'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias f='readlink -f'
alias fzf='fzf --ansi'
alias gdc='git diff --cached'
alias gdcs='git diff --cached --stat'
alias gd='git diff --diff-filter=M'
alias gdh='git diff --cached origin/head'
alias gdhs='git diff --stat --cached origin/head'
alias gl='git log -p --follow -1'
alias grep='grep --color=auto'
alias gr='git branch -r -i --sort=-committerdate  | grep -v -i 'origin/head' | head -10'
alias gs='git status'
alias ls='ls --color'
alias p4d='p4 diff ...'
alias p4s='p4 diff -sa ...'
alias mv='mv -i'
alias rm='rm -i'

export EDITOR=vim
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
export LS_COLORS='rs=0:di=01;37;44:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:';
# Press - and P in less to get the current prompt
LESS_PM='?f%f .?n?m(%T %i of %m) ..?ltlines %lt-%lb?L/%L. :byte %bB?s/%s. .?e(END) ?x- Next\: %x.:?pB%pB\%..%t'
LESS_PW='[TAIL] ?f%f ..?ltlines %lt-%lb?L/%L. .?pB%pB\%..%t'
export LESS="-r -X -S -M -i -j 10 -# 4 -c -PM${LESS_PM}\$ -Pw${LESS_PW}\$"
export PAGER=less

# Add FZF tie-in (https://vimawesome.com/plugin/fzf)
# Set FZF_DIR in .bashrc.local
if [ "$FZF_DIR" != "" ]; then
  #  Ctrl-T - Paste the selected files and directories onto the command-line
  #  Ctrl-R - Paste the selected command from history onto the command-line
  #  ALT-C  - cd into the selected directory
  #  **<TAB> - Fuzzy completion
  #    vim **<TAB>
  #    vim ../**<TAB>
  #    cd **<TAB>
  #  Process names, host names, env vars
  source $FZF_DIR/shell/key-bindings.bash
  source $FZF_DIR/shell/completion.bash
fi

export PATH=$HOME/bin:$PATH
